
DECOMPOSING THE PROBLEM

Before we can start coding, we need to come up with an approach to mentally map 
the solution. But before even starting to think about a solution, we have to 
first understand the problem better and decompose it more. For complex problems, 
a good starting point is describing the problem, and building a high level 
flowchart.

Let's try to write out a description of the game:

  Tic Tac Toe is a 2 player game played on a 3x3 board. Each player takes a turn 
  and marks a square on the board. First player to reach 3 squares in a row, 
  including diagonals, wins. If all 9 squares are marked and no player has 3 
  squares in a row, then the game is a tie.

That's a generic description, but in order to build a flow chart, we need to 
outline the sequence of the gameplay a little more:

  1. Display the initial empty 3x3 board.
  2. Ask the user to mark a square.
  3. Computer marks a square.
  4. Display the updated board state.
  5. If winner, display winner.
  6. If board is full, display tie.
  7. If neither winner nor board is full, go to #2
  8. Play again?
  9. If yes, go to #1
  10. Good bye!




